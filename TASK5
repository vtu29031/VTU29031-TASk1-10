
import numpy as np
from numpy import inf

d = np.array([
    [0,10,12,11,14],
    [10,0,13,15,8],
    [12,13,0,9,14],
    [11,15,9,0,16],
    [14,8,14,16,0]
])

iteration = 100
n_ants = 5
n_citys = 5

m = n_ants
n = n_citys
e = .5
alpha = 1
beta = 2

visibility = 1/d
visibility[visibility == inf] = 0
pheromone = .1 * np.ones((n, n))

best_route = None
best_cost = float('inf')

for ite in range(iteration):
    routes = np.ones((m, n+1))
    for k in range(m):
        for j in range(1, n):
            cur = int(routes[k][j-1]) - 1
            prob = np.power(pheromone[cur], alpha) * np.power(visibility[cur], beta)
            prob[cur] = 0
            prob = prob / np.sum(prob)
            next_city = np.random.choice(range(n), p=prob)
            routes[k][j] = next_city + 1
        routes[k][-1] = 1

    dist_cost = np.zeros(m)
    for i in range(m):
        s = 0
        for j in range(n):
            s += d[int(routes[i][j])-1, int(routes[i][j+1])-1]
        dist_cost[i] = s

    idx = np.argmin(dist_cost)
    if dist_cost[idx] < best_cost:
        best_cost = dist_cost[idx]
        best_route = routes[idx]

    pheromone = (1 - e) * pheromone
    for i in range(m):
        for j in range(n):
            pheromone[int(routes[i][j])-1, int(routes[i][j+1])-1] += 1 / dist_cost[i]

print("Best path:", best_route)
print("Cost of the best path:", best_cost)
/var/folders/th/wqjsxyss0qb4j9ll94jbvl940000gn/T/ipykernel_2650/3543024658.py:22: RuntimeWarning: divide by zero encountered in divide
  visibility = 1/d
Best path: [1. 2. 5. 2. 1. 1.]
Cost of the best path: 36.0
 
